#! /usr/bin/env bash

# this script expects to be edited with the following values needing to be set:
# The host of the initial target Redis instance (in cluster #1)
# The port of the initial target Redis instance (in cluster #1)
# The host of the second target Redis instance (in cluster #2)
# The port of the second target Redis instance (in cluster #2)
# edit these four properties to match your environment:

host=localhost
port=10900

host2=localhost
port2=10900

if [ $# -eq 0 ]
  then
    echo "No arguments supplied - Please read the comments in the script"
    exit 1
fi

# this script also expects 2 arguments:
# 1 - the name of the key to be written and read from
# 2 - the number of entries to write into that key
# example usage:  ReliableWriterReaderHash.sh testkey 2000
# note that the prefix 'h:' will be placed in front of the keyname provided to denote the use of a Hash data type

starttime=$(redis-cli -h $host -p $port time)

arrIN=(${starttime// / })
starttime=${arrIN[0]}

redis-cli -h $host -p $port EVAL "for index = 1,ARGV[1] do redis.call('HSET',KEYS[1],index,index) end" 1 h:$1 $2

redis-cli -h $host -p $port EVAL "local hashSum = 0 local hashSize = (redis.call('HLEN',KEYS[1])) for index = 1,hashSize do hashSum = (hashSum + (redis.call('HGET',KEYS[1],index))) end return 'Sum of values stored in hash named  '..KEYS[1]..' is '..hashSum" 1 h:$1 $2

redis-cli -h $host2 -p $port2 -i 1 EVAL "local hashSum = 0 local hashSize = (redis.call('HLEN',KEYS[1])) for index = 1,hashSize do hashSum = (hashSum + (redis.call('HGET',KEYS[1],index))) end return 'Calling second host and port... Sum of values stored in hash named  '..KEYS[1]..' is '..hashSum" 1 h:$1 $2

endtime=$(redis-cli -h $host -p $port time)

arrIN=(${endtime// / })
endtime=${arrIN[0]}

duration=$(($endtime-$starttime))
echo $starttime
echo $endtime
echo $0 $1 $2 "took "$duration "seconds"