#! /usr/bin/env bash

# this script expects to be edited with the following values needing to be set:
# The host of the target Redis instance
# The port of the target Redis instance

host=redis-6379.homelab.local
port=6379

# this script also expects to be called with two arguments
# The first arg determines the # of partitions to be used and also the # iterations executed
# The second arg determines the size of work to be performed during each iteration
# example execution:  routlooploader.sh 16 10000

redis-cli -h $host -p $port del z:routvalues
calcrouts=$(redis-cli -h $host -p $port get calcrouts)

redis-cli -h $host -p $port EVALSHA $calcrouts 1 z:routvalues $1
bigzs=$(redis-cli -h $host -p $port get bigzs$host)
varyzs=$(redis-cli -h $host -p $port get varyzs$host)
avgzsv=$(redis-cli -h $host -p $port get avgzsv$host)
varyhs=$(redis-cli -h $host -p $port get varyhs$host)

for ((i =0; i < $1; i++)) do
routV=$(redis-cli -h $host -p $port zrange z:routvalues ${i} ${i})
echo $routV
echo redis-cli -h $host -p $port EVALSHA $bigzs 1 z:ss1{$routV} $2
redis-cli -h $host -p $port EVALSHA $bigzs 1 z:ss1{$routV} $2
echo redis-cli -h $host -p $port EVALSHA $varyzs 1 z:{$routV} $2 50
redis-cli -h $host -p $port EVALSHA $varyzs 1 z:{$routV} $2 50
redis-cli -h $host -p $port EVALSHA $varyhs 1 h:{$routV} 10 TRGT
oput=$(redis-cli -h $host -p $port -r 1 -i 1 EVALSHA $avgzsv 1 z:{$routV}:PURCH:${i+1})
echo $oput
echo redis-cli -h $host -p $port -r 3 -i 1 EVALSHA $avgzsv 1 z:{$routV}:PURCH:${i+1}
redis-cli -h $host -p $port EVALSHA $avgzsv 1 z:{$routV}:PURCH:${i+10}
done